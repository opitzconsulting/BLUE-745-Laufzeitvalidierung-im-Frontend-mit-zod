/* AUTOGENERATED FILE. DO NOT EDIT MANUALLY.*/
/* Use npm run build-types. Assumes Backend is located at ../zod-example-backend */
import { z } from "zod";
export const WeatherDataResponseDTOZod = z
  .object({
    nonce: z.string(),
    weatherStations: z
      .array(
        z
          .object({
            humidityFraction: z.number().gte(0).lte(1),
            temperatureDegreesCelsius: z.number().gte(-273.15),
            weatherStationName: z.string().min(1),
            windMetresPerSecond: z.number().gte(0),
          })
          .strict()
          .describe("A Weather Station Entry"),
      )
      .max(20),
  })
  .strict()
  .describe("List of Weather Station Measurements");
export type WeatherDataResponseDTO = z.infer<typeof WeatherDataResponseDTOZod>;
export const SumResponseDTOZod = z
  .object({
    total: z.number(),
    totalExpenses: z.number().gte(0),
    totalProfit: z.number().gte(0),
  })
  .strict();
export type SumResponseDTO = z.infer<typeof SumResponseDTOZod>;
export const SumRequestDTOZod = z
  .object({
    entries: z
      .array(
        z
          .object({
            amount: z.number().gte(0),
            timestamp: z.string(),
            type: z.enum(["Expense", "Profit"]).optional(),
          })
          .strict(),
      )
      .min(1),
  })
  .strict();
export type SumRequestDTO = z.infer<typeof SumRequestDTOZod>;
export const BadWeatherDataResponseDTOZod = z.record(z.never());
export type BadWeatherDataResponseDTO = z.infer<
  typeof BadWeatherDataResponseDTOZod
>;
